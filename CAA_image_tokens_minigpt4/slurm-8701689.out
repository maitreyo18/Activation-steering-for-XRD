Mon Jun 16 11:42:14 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 565.57.01              Driver Version: 565.57.01      CUDA Version: 12.7     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  Tesla V100-PCIE-32GB           On  |   00000000:AF:00.0 Off |                    0 |
| N/A   26C    P0             25W /  250W |       1MiB /  32768MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
/depot/amannodi/apps/ASTRA/envs/astra_minigpt/lib/python3.10/site-packages/transformers/utils/hub.py:127: FutureWarning: Using `TRANSFORMERS_CACHE` is deprecated and will be removed in v5 of Transformers. Use `HF_HOME` instead.
  warnings.warn(
/scratch/gilbreth/biswasm/ASTRA_updated/minigpt4/models/eva_vit.py:433: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(cached_file, map_location="cpu")
/scratch/gilbreth/biswasm/ASTRA_updated/minigpt4/models/blip2.py:77: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(cached_file, map_location="cpu")
You are using the default legacy behaviour of the <class 'transformers.models.llama.tokenization_llama.LlamaTokenizer'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565 - if you loaded a llama tokenizer from a GGUF file you can ignore this message
The `load_in_4bit` and `load_in_8bit` arguments are deprecated and will be removed in the future versions. Please, pass a `BitsAndBytesConfig` object in `quantization_config` argument instead.
Loading VIT
Loading VIT Done
Loading Q-Former
Loading Q-Former Done
Loading LLAMA
Downloading shards:   0%|          | 0/3 [00:00<?, ?it/s]Downloading shards: 100%|██████████| 3/3 [00:00<00:00, 529.43it/s]
/depot/amannodi/apps/ASTRA/envs/astra_minigpt/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:519: UserWarning: `pad_token_id` should be positive but got -1. This will cause errors when batch generating, if there is padding. Please set `pad_token_id` explicitly by `model.generation_config.pad_token_id=PAD_TOKEN_ID` to avoid errors in generation, and ensure your `input_ids` input does not have negative values.
  warnings.warn(
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:20<00:40, 20.11s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:38<00:18, 18.90s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:49<00:00, 15.25s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:49<00:00, 16.36s/it]
/scratch/gilbreth/biswasm/ASTRA_updated/minigpt4/models/mini_gpt4.py:274: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ckpt = torch.load(ckpt_path, map_location="cpu")
You are using the default legacy behaviour of the <class 'transformers.models.llama.tokenization_llama_fast.LlamaTokenizerFast'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565 - if you loaded a llama tokenizer from a GGUF file you can ignore this message.
Loading LLAMA Done
Load BLIP2-LLM Checkpoint: /scratch/gilbreth/biswasm/ASTRA_updated/ckpts/pretrained_minigpt4.pth
Total number of layers in the model: 40
  0%|          | 0/2 [00:00<?, ?it/s]/scratch/gilbreth/biswasm/ASTRA_updated/minigpt4/models/blip2.py:41: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  return torch.cuda.amp.autocast(dtype=dtype)
/scratch/gilbreth/biswasm/ASTRA_updated/CAA_image_tokens/./extract_image_tokens_CAA_batch.py:125: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.no_grad(), torch.cuda.amp.autocast():
                                       0%|          | 0/2 [00:17<?, ?it/s]                                       0%|          | 0/2 [00:17<?, ?it/s]                                       0%|          | 0/2 [00:17<?, ?it/s]                                       0%|          | 0/2 [00:17<?, ?it/s]                                       0%|          | 0/2 [00:17<?, ?it/s]                                       0%|          | 0/2 [00:17<?, ?it/s]                                       0%|          | 0/2 [00:17<?, ?it/s]                                       0%|          | 0/2 [00:17<?, ?it/s]                                       0%|          | 0/2 [00:17<?, ?it/s]                                       0%|          | 0/2 [00:17<?, ?it/s]                                       0%|          | 0/2 [00:23<?, ?it/s]                                       0%|          | 0/2 [00:23<?, ?it/s]                                       0%|          | 0/2 [00:23<?, ?it/s]                                       0%|          | 0/2 [00:23<?, ?it/s]                                       0%|          | 0/2 [00:23<?, ?it/s]                                       0%|          | 0/2 [00:23<?, ?it/s]                                       0%|          | 0/2 [00:23<?, ?it/s]                                       0%|          | 0/2 [00:23<?, ?it/s]                                       0%|          | 0/2 [00:23<?, ?it/s]                                       0%|          | 0/2 [00:23<?, ?it/s]                                       0%|          | 0/2 [00:29<?, ?it/s]                                       0%|          | 0/2 [00:29<?, ?it/s]                                       0%|          | 0/2 [00:29<?, ?it/s]                                       0%|          | 0/2 [00:29<?, ?it/s]                                       0%|          | 0/2 [00:29<?, ?it/s]                                       0%|          | 0/2 [00:29<?, ?it/s]                                       0%|          | 0/2 [00:29<?, ?it/s]                                       0%|          | 0/2 [00:29<?, ?it/s]                                       0%|          | 0/2 [00:29<?, ?it/s]                                       0%|          | 0/2 [00:29<?, ?it/s]                                       0%|          | 0/2 [00:35<?, ?it/s]                                       0%|          | 0/2 [00:35<?, ?it/s]                                       0%|          | 0/2 [00:35<?, ?it/s]                                       0%|          | 0/2 [00:35<?, ?it/s]                                       0%|          | 0/2 [00:35<?, ?it/s]                                       0%|          | 0/2 [00:35<?, ?it/s]                                       0%|          | 0/2 [00:35<?, ?it/s]                                       0%|          | 0/2 [00:35<?, ?it/s]                                       0%|          | 0/2 [00:35<?, ?it/s]                                       0%|          | 0/2 [00:35<?, ?it/s] 50%|█████     | 1/2 [00:35<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:41<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:41<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:41<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:41<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:41<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:41<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:41<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:41<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:41<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:41<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:47<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:47<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:47<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:47<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:47<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:47<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:47<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:47<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:47<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:47<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:53<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:53<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:53<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:53<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:53<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:53<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:53<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:53<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:53<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:53<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:59<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:59<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:59<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:59<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:59<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:59<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:59<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:59<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:59<00:35, 35.63s/it]                                              50%|█████     | 1/2 [00:59<00:35, 35.63s/it]100%|██████████| 2/2 [00:59<00:00, 28.87s/it]100%|██████████| 2/2 [00:59<00:00, 29.88s/it]
Processed prompt for image m1f4-peak.0001.png:
Give the following image: <Img>ImageContent</Img>. You will be able to see the image once I provide it to you. Please answer my questions.###Human: <Img><ImageHere></Img> This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. artifact
B. strong background
C. ice ring
D. background ring
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.###Assistant:

[DEBUG] Correct prompt: Give the following image: <Img>ImageContent</Img>. You will be able to see the image once I provide it to you. Please answer my questions.###Human: <Img><ImageHere></Img> This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. artifact
B. strong background
C. ice ring
D. background ring
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.###Assistant: D. background ring

=== First Image+Prompt Token Analysis ===

Tokenized segments:
Segment 0: <s> Give the following image: <Img>ImageContent</Img>. You will be able to see the image once I provide it to you. Please answer my questions.###Human: <Img>
Segment 1: </Img> This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. artifact
B. strong background
C. ice ring
D. background ring
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.###Assistant: D. background ring

Image token start index: 42
Image token end index: 74
Number of image tokens: 32
Total context length: 152
=== End of First Image+Prompt Analysis ===


==================================================
Image: m1f4-peak.0001.png
Prompt: This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. artifact
B. strong background
C. ice ring
D. background ring
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.
Correct Answer: D. background ring
Image token start index: 42, end index: 74, num tokens: 32
Layer 12 correct activation shape: torch.Size([32, 5120])
Layer 12 correct activation: tensor([ 1.7939, -1.4277, -0.2947,  ..., -0.5771, -1.5449,  1.5273],
       dtype=torch.float16)
Layer 24 correct activation shape: torch.Size([32, 5120])
Layer 24 correct activation: tensor([ 2.3750, -0.3333, -0.9512,  ..., -0.5903, -1.5137,  1.8740],
       dtype=torch.float16)
==================================================

[DEBUG] Wrong prompt: Give the following image: <Img>ImageContent</Img>. You will be able to see the image once I provide it to you. Please answer my questions.###Human: <Img><ImageHere></Img> This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. artifact
B. strong background
C. ice ring
D. background ring
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.###Assistant: A. artifact

==================================================
Wrong Answer: A
Image token start index: 42, end index: 74, num tokens: 32
Layer 12 wrong activation shape: torch.Size([32, 5120])
Layer 12 wrong activation: tensor([ 1.7939, -1.4277, -0.2949,  ..., -0.5771, -1.5449,  1.5273],
       dtype=torch.float16)
Layer 12 difference vector: tensor([0.0000, 0.0000, 0.0002,  ..., 0.0000, 0.0000, 0.0000],
       dtype=torch.float16)
Layer 24 wrong activation shape: torch.Size([32, 5120])
Layer 24 wrong activation: tensor([ 2.3770, -0.3335, -0.9517,  ..., -0.5908, -1.5127,  1.8730],
       dtype=torch.float16)
Layer 24 difference vector: tensor([-0.0020,  0.0002,  0.0005,  ...,  0.0005, -0.0010,  0.0010],
       dtype=torch.float16)
==================================================

[DEBUG] Wrong prompt: Give the following image: <Img>ImageContent</Img>. You will be able to see the image once I provide it to you. Please answer my questions.###Human: <Img><ImageHere></Img> This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. artifact
B. strong background
C. ice ring
D. background ring
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.###Assistant: B. strong background

==================================================
Wrong Answer: B
Image token start index: 42, end index: 74, num tokens: 32
Layer 12 wrong activation shape: torch.Size([32, 5120])
Layer 12 wrong activation: tensor([ 1.7939, -1.4287, -0.2949,  ..., -0.5771, -1.5449,  1.5273],
       dtype=torch.float16)
Layer 12 difference vector: tensor([0.0000, 0.0010, 0.0002,  ..., 0.0000, 0.0000, 0.0000],
       dtype=torch.float16)
Layer 24 wrong activation shape: torch.Size([32, 5120])
Layer 24 wrong activation: tensor([ 2.3770, -0.3337, -0.9512,  ..., -0.5908, -1.5137,  1.8730],
       dtype=torch.float16)
Layer 24 difference vector: tensor([-0.0020,  0.0005,  0.0000,  ...,  0.0005,  0.0000,  0.0010],
       dtype=torch.float16)
==================================================

[DEBUG] Wrong prompt: Give the following image: <Img>ImageContent</Img>. You will be able to see the image once I provide it to you. Please answer my questions.###Human: <Img><ImageHere></Img> This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. artifact
B. strong background
C. ice ring
D. background ring
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.###Assistant: C. ice ring

==================================================
Wrong Answer: C
Image token start index: 42, end index: 74, num tokens: 32
Layer 12 wrong activation shape: torch.Size([32, 5120])
Layer 12 wrong activation: tensor([ 1.7939, -1.4287, -0.2949,  ..., -0.5771, -1.5449,  1.5273],
       dtype=torch.float16)
Layer 12 difference vector: tensor([0.0000, 0.0010, 0.0002,  ..., 0.0000, 0.0000, 0.0000],
       dtype=torch.float16)
Layer 24 wrong activation shape: torch.Size([32, 5120])
Layer 24 wrong activation: tensor([ 2.3770, -0.3340, -0.9517,  ..., -0.5908, -1.5127,  1.8730],
       dtype=torch.float16)
Layer 24 difference vector: tensor([-0.0020,  0.0007,  0.0005,  ...,  0.0005, -0.0010,  0.0010],
       dtype=torch.float16)
==================================================

Processed prompt for image m1f4-peak.0001.png:
Give the following image: <Img>ImageContent</Img>. You will be able to see the image once I provide it to you. Please answer my questions.###Human: <Img><ImageHere></Img> This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. loop scattering
B. background ring
C. diffuse scattering
D. no anomalies
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.###Assistant:

[DEBUG] Correct prompt: Give the following image: <Img>ImageContent</Img>. You will be able to see the image once I provide it to you. Please answer my questions.###Human: <Img><ImageHere></Img> This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. loop scattering
B. background ring
C. diffuse scattering
D. no anomalies
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.###Assistant: B. background ring

==================================================
Image: m1f4-peak.0001.png
Prompt: This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. loop scattering
B. background ring
C. diffuse scattering
D. no anomalies
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.
Correct Answer: B. background ring
Image token start index: 42, end index: 74, num tokens: 32
Layer 12 correct activation shape: torch.Size([32, 5120])
Layer 12 correct activation: tensor([ 1.7939, -1.4287, -0.2947,  ..., -0.5771, -1.5449,  1.5273],
       dtype=torch.float16)
Layer 24 correct activation shape: torch.Size([32, 5120])
Layer 24 correct activation: tensor([ 2.3750, -0.3342, -0.9512,  ..., -0.5903, -1.5127,  1.8740],
       dtype=torch.float16)
==================================================

[DEBUG] Wrong prompt: Give the following image: <Img>ImageContent</Img>. You will be able to see the image once I provide it to you. Please answer my questions.###Human: <Img><ImageHere></Img> This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. loop scattering
B. background ring
C. diffuse scattering
D. no anomalies
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.###Assistant: A. loop scattering

==================================================
Wrong Answer: A
Image token start index: 42, end index: 74, num tokens: 32
Layer 12 wrong activation shape: torch.Size([32, 5120])
Layer 12 wrong activation: tensor([ 1.7949, -1.4287, -0.2947,  ..., -0.5771, -1.5449,  1.5264],
       dtype=torch.float16)
Layer 12 difference vector: tensor([-0.0010,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0010],
       dtype=torch.float16)
Layer 24 wrong activation shape: torch.Size([32, 5120])
Layer 24 wrong activation: tensor([ 2.3770, -0.3330, -0.9507,  ..., -0.5903, -1.5137,  1.8730],
       dtype=torch.float16)
Layer 24 difference vector: tensor([-0.0020, -0.0012, -0.0005,  ...,  0.0000,  0.0010,  0.0010],
       dtype=torch.float16)
==================================================

[DEBUG] Wrong prompt: Give the following image: <Img>ImageContent</Img>. You will be able to see the image once I provide it to you. Please answer my questions.###Human: <Img><ImageHere></Img> This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. loop scattering
B. background ring
C. diffuse scattering
D. no anomalies
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.###Assistant: C. diffuse scattering

==================================================
Wrong Answer: C
Image token start index: 42, end index: 74, num tokens: 32
Layer 12 wrong activation shape: torch.Size([32, 5120])
Layer 12 wrong activation: tensor([ 1.7939, -1.4287, -0.2949,  ..., -0.5771, -1.5449,  1.5273],
       dtype=torch.float16)
Layer 12 difference vector: tensor([0.0000, 0.0000, 0.0002,  ..., 0.0000, 0.0000, 0.0000],
       dtype=torch.float16)
Layer 24 wrong activation shape: torch.Size([32, 5120])
Layer 24 wrong activation: tensor([ 2.3770, -0.3337, -0.9512,  ..., -0.5898, -1.5127,  1.8740],
       dtype=torch.float16)
Layer 24 difference vector: tensor([-0.0020, -0.0005,  0.0000,  ..., -0.0005,  0.0000,  0.0000],
       dtype=torch.float16)
==================================================

[DEBUG] Wrong prompt: Give the following image: <Img>ImageContent</Img>. You will be able to see the image once I provide it to you. Please answer my questions.###Human: <Img><ImageHere></Img> This is a X-ray diffraction image. Which option is correct about the anomalies present?:
A. loop scattering
B. background ring
C. diffuse scattering
D. no anomalies
IMPORTANT: Please do not give any explanation. Answer with the option's letter from the given choices directly.###Assistant: D. no anomalies

==================================================
Wrong Answer: D
Image token start index: 42, end index: 74, num tokens: 32
Layer 12 wrong activation shape: torch.Size([32, 5120])
Layer 12 wrong activation: tensor([ 1.7939, -1.4287, -0.2949,  ..., -0.5776, -1.5449,  1.5273],
       dtype=torch.float16)
Layer 12 difference vector: tensor([0.0000, 0.0000, 0.0002,  ..., 0.0005, 0.0000, 0.0000],
       dtype=torch.float16)
Layer 24 wrong activation shape: torch.Size([32, 5120])
Layer 24 wrong activation: tensor([ 2.3770, -0.3335, -0.9517,  ..., -0.5903, -1.5127,  1.8730],
       dtype=torch.float16)
Layer 24 difference vector: tensor([-0.0020, -0.0007,  0.0005,  ...,  0.0000,  0.0000,  0.0010],
       dtype=torch.float16)
==================================================

Saved reference activations to ./diff_act_bgm_ring_6-24.pt
Wrote model responses to test_model_responses.csv
